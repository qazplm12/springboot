<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis의 sql 쿼리문을 사용하기 위하 파일-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 자바 인터페이스(mapper)와 연동 설정-->
<!-- mapper : 자바 인터페이스 중 @Mapper 어노테이션이 사용된 인터페이스와 연동하는 태그 -->
<!-- namespace : 자바 인터페이스의 패키지명과 이름을 모두 입력하여 현재 xml 파일과 연동 -->
<!-- xml 파일은 현재 프로젝트의 내부 구조를 모르기 때문에 패키지명까지 모두 입력해야 함 -->
<mapper namespace="com.bitc.board2.mapper.Board2Mapper">
    <!-- 실제 sql 쿼리문 입력-->
    <!-- 연동된 인터페이스에서 제공하는 메소드명과 동일한 id 속성명을 가지는 태그를 생성 -->
    <!-- 태그는 select, insert, update, delete를 사용함-->

    <!-- 해당 태그의 속성은 id, resultType, parameterType를 사용함-->
    <!-- id : 연동된 인터페이스에서 제공하는 메소드명과 동일하게 입력,
        xml은 메소드 오버로딩이라는 개념이 없기 때문에 동일한 이름을 사용할 수 없음-->
    <!-- resultType : select 쿼리문 사용 훟 반환되는 결과 타입을 지정, 자바 클래스 중 DTO 클래스를 설정,
        자바의 기본 데이터 타입은 그대로 사용 가능-->
    <!-- parameterType : 해당 태그를 실행 시 필요한 매개변수의 데이터 타입,
        매개변수가 1개일 경우 해당 데이터 타입을 그대로 사용, 매개변수가 2개이면 HashMap 타입 사용,
        매개변수가 3개 이상이면 DTO 클래스를 생성하여 해당 DTO 클래스타입의 패키지명과 함께 입력-->
    <select id="selectBoard2List" resultType="com.bitc.board2.DTO.Board2DTO">
        SELECT board_idx, title, content, create_id, create_dt, update_id, update_dt, hit_cnt
        FROM sboard
        WHERE deleted_yn = 'N'
        ORDER BY board_idx DESC
    </select>

    <!-- parameterType 사용 시 자바 인터페이스에서 제공하는 매개변수 명을 그대로 사용함-->
    <!-- #{} 안에 변수명을 입력하여 사용함-->
    <!-- 자바 인터페이스에서 @Param 어노테이션 사용시 해당 어노테이션에서 제공한 이름으로 사용함-->
    <!-- parameterType이 DTO 클래스 타입으로 설정된 경우 해당 DTO 클래스의 필드명으로 사용함-->
    <!-- 게시물 상세보기 SQL문 -->
    <select id="openBoard2Detail" resultType="com.bitc.board2.DTO.Board2DTO" parameterType="int">
        SELECT board_idx, title, content, create_id, create_dt, update_id, update_dt, hit_cnt
        FROM sboard
        WHERE board_idx = #{boardIdx}
        AND deleted_yn = 'N'
    </select>

    <!-- 게시물 등록 SQL문 -->
    <!-- useGeneratedKeys : insert문 사용 시 새로 생성되는 글번호를 mybatis를 사용하여 생성-->
    <!-- mysql은 dbms 자체적으로 auto incremental 옵션이 존재하여 자동 번호 증가를 사용할 수 있지만
        oracle 같은 경우 해당 기능이 없어서 oracle 함수를 사용하여 기능을 만들어야함 -->
    <!-- mybatis에서 useGeneratedKeys를 사용하여 자동 증가 옵션을 바로 사용할 수 있음 -->
    <!-- keyProperty : useGeneratedKeys 옵션을 사용하여 자동 증가되는 번호를 받아올 수 있음, 반환받을 정보를 저장할 키를
        DTO 타입의 필드명으로 지정함-->
    <insert id="insertBoard2" parameterType="com.bitc.board2.DTO.Board2DTO" useGeneratedKeys="true"
            keyProperty="boardIdx">
        INSERT INTO
        sboard (title, content, create_id, create_dt)
        VALUES (#{title}, #{content}, #{createId}, NOW())
    </insert>

    <!-- 게시물 수정 SQL문 -->
    <update id="updateBoard2" parameterType="com.bitc.board2.DTO.Board2DTO">
        UPDATE sboard
        SET
        title = #{title},
        content = #{content},
        update_id = #{updateId},
        update_dt = NOW()
        WHERE board_idx = #{boardIdx}
    </update>

    <!-- 게시물 삭제 SQL문 -->
    <delete id="deleteBoard2" parameterType="int">
        UPDATE sboard SET deleted_yn ='Y'
        WHERE board_idx = #{idx}
    </delete>

    <!-- 게시물 조회수 업데이트 SQL문 -->
    <update id="updateHitCount" parameterType="int">
        UPDATE sboard
        SET hit_cnt = hit_cnt + 1
        WHERE board_idx = #{boardIdx}
    </update>
</mapper>
